/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as RoadmapImport } from "./routes/roadmap";
import { Route as CreateFeedbackImport } from "./routes/create-feedback";
import { Route as AccountImport } from "./routes/account";
import { Route as AuthRouteImport } from "./routes/_auth/route";
import { Route as IndexImport } from "./routes/index";
import { Route as FeedbackFeedbackIdImport } from "./routes/feedback.$feedbackId";
import { Route as AuthSignupImport } from "./routes/_auth/signup";
import { Route as AuthLoginImport } from "./routes/_auth/login";
import { Route as AuthForgotPasswordImport } from "./routes/_auth/forgot-password";
import { Route as AuthEmailVerificationImport } from "./routes/_auth/email-verification";
import { Route as FeedbackFeedbackIdEditImport } from "./routes/feedback_.$feedbackId.edit";
import { Route as AuthResetPasswordTokenImport } from "./routes/_auth/reset-password.$token";
import { Route as AuthForgotPasswordSentImport } from "./routes/_auth/forgot-password_.sent";

// Create/Update Routes

const RoadmapRoute = RoadmapImport.update({
  id: "/roadmap",
  path: "/roadmap",
  getParentRoute: () => rootRoute,
} as any);

const CreateFeedbackRoute = CreateFeedbackImport.update({
  id: "/create-feedback",
  path: "/create-feedback",
  getParentRoute: () => rootRoute,
} as any);

const AccountRoute = AccountImport.update({
  id: "/account",
  path: "/account",
  getParentRoute: () => rootRoute,
} as any);

const AuthRouteRoute = AuthRouteImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const FeedbackFeedbackIdRoute = FeedbackFeedbackIdImport.update({
  id: "/feedback/$feedbackId",
  path: "/feedback/$feedbackId",
  getParentRoute: () => rootRoute,
} as any);

const AuthSignupRoute = AuthSignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => AuthRouteRoute,
} as any);

const AuthLoginRoute = AuthLoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => AuthRouteRoute,
} as any);

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: "/forgot-password",
  path: "/forgot-password",
  getParentRoute: () => AuthRouteRoute,
} as any);

const AuthEmailVerificationRoute = AuthEmailVerificationImport.update({
  id: "/email-verification",
  path: "/email-verification",
  getParentRoute: () => AuthRouteRoute,
} as any);

const FeedbackFeedbackIdEditRoute = FeedbackFeedbackIdEditImport.update({
  id: "/feedback_/$feedbackId/edit",
  path: "/feedback/$feedbackId/edit",
  getParentRoute: () => rootRoute,
} as any);

const AuthResetPasswordTokenRoute = AuthResetPasswordTokenImport.update({
  id: "/reset-password/$token",
  path: "/reset-password/$token",
  getParentRoute: () => AuthRouteRoute,
} as any);

const AuthForgotPasswordSentRoute = AuthForgotPasswordSentImport.update({
  id: "/forgot-password_/sent",
  path: "/forgot-password/sent",
  getParentRoute: () => AuthRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth": {
      id: "/_auth";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/account": {
      id: "/account";
      path: "/account";
      fullPath: "/account";
      preLoaderRoute: typeof AccountImport;
      parentRoute: typeof rootRoute;
    };
    "/create-feedback": {
      id: "/create-feedback";
      path: "/create-feedback";
      fullPath: "/create-feedback";
      preLoaderRoute: typeof CreateFeedbackImport;
      parentRoute: typeof rootRoute;
    };
    "/roadmap": {
      id: "/roadmap";
      path: "/roadmap";
      fullPath: "/roadmap";
      preLoaderRoute: typeof RoadmapImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth/email-verification": {
      id: "/_auth/email-verification";
      path: "/email-verification";
      fullPath: "/email-verification";
      preLoaderRoute: typeof AuthEmailVerificationImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/_auth/forgot-password": {
      id: "/_auth/forgot-password";
      path: "/forgot-password";
      fullPath: "/forgot-password";
      preLoaderRoute: typeof AuthForgotPasswordImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/_auth/login": {
      id: "/_auth/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof AuthLoginImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/_auth/signup": {
      id: "/_auth/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof AuthSignupImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/feedback/$feedbackId": {
      id: "/feedback/$feedbackId";
      path: "/feedback/$feedbackId";
      fullPath: "/feedback/$feedbackId";
      preLoaderRoute: typeof FeedbackFeedbackIdImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth/forgot-password_/sent": {
      id: "/_auth/forgot-password_/sent";
      path: "/forgot-password/sent";
      fullPath: "/forgot-password/sent";
      preLoaderRoute: typeof AuthForgotPasswordSentImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/_auth/reset-password/$token": {
      id: "/_auth/reset-password/$token";
      path: "/reset-password/$token";
      fullPath: "/reset-password/$token";
      preLoaderRoute: typeof AuthResetPasswordTokenImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/feedback_/$feedbackId/edit": {
      id: "/feedback_/$feedbackId/edit";
      path: "/feedback/$feedbackId/edit";
      fullPath: "/feedback/$feedbackId/edit";
      preLoaderRoute: typeof FeedbackFeedbackIdEditImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthEmailVerificationRoute: typeof AuthEmailVerificationRoute;
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute;
  AuthLoginRoute: typeof AuthLoginRoute;
  AuthSignupRoute: typeof AuthSignupRoute;
  AuthForgotPasswordSentRoute: typeof AuthForgotPasswordSentRoute;
  AuthResetPasswordTokenRoute: typeof AuthResetPasswordTokenRoute;
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthEmailVerificationRoute: AuthEmailVerificationRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthForgotPasswordSentRoute: AuthForgotPasswordSentRoute,
  AuthResetPasswordTokenRoute: AuthResetPasswordTokenRoute,
};

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof AuthRouteRouteWithChildren;
  "/account": typeof AccountRoute;
  "/create-feedback": typeof CreateFeedbackRoute;
  "/roadmap": typeof RoadmapRoute;
  "/email-verification": typeof AuthEmailVerificationRoute;
  "/forgot-password": typeof AuthForgotPasswordRoute;
  "/login": typeof AuthLoginRoute;
  "/signup": typeof AuthSignupRoute;
  "/feedback/$feedbackId": typeof FeedbackFeedbackIdRoute;
  "/forgot-password/sent": typeof AuthForgotPasswordSentRoute;
  "/reset-password/$token": typeof AuthResetPasswordTokenRoute;
  "/feedback/$feedbackId/edit": typeof FeedbackFeedbackIdEditRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof AuthRouteRouteWithChildren;
  "/account": typeof AccountRoute;
  "/create-feedback": typeof CreateFeedbackRoute;
  "/roadmap": typeof RoadmapRoute;
  "/email-verification": typeof AuthEmailVerificationRoute;
  "/forgot-password": typeof AuthForgotPasswordRoute;
  "/login": typeof AuthLoginRoute;
  "/signup": typeof AuthSignupRoute;
  "/feedback/$feedbackId": typeof FeedbackFeedbackIdRoute;
  "/forgot-password/sent": typeof AuthForgotPasswordSentRoute;
  "/reset-password/$token": typeof AuthResetPasswordTokenRoute;
  "/feedback/$feedbackId/edit": typeof FeedbackFeedbackIdEditRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/_auth": typeof AuthRouteRouteWithChildren;
  "/account": typeof AccountRoute;
  "/create-feedback": typeof CreateFeedbackRoute;
  "/roadmap": typeof RoadmapRoute;
  "/_auth/email-verification": typeof AuthEmailVerificationRoute;
  "/_auth/forgot-password": typeof AuthForgotPasswordRoute;
  "/_auth/login": typeof AuthLoginRoute;
  "/_auth/signup": typeof AuthSignupRoute;
  "/feedback/$feedbackId": typeof FeedbackFeedbackIdRoute;
  "/_auth/forgot-password_/sent": typeof AuthForgotPasswordSentRoute;
  "/_auth/reset-password/$token": typeof AuthResetPasswordTokenRoute;
  "/feedback_/$feedbackId/edit": typeof FeedbackFeedbackIdEditRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | ""
    | "/account"
    | "/create-feedback"
    | "/roadmap"
    | "/email-verification"
    | "/forgot-password"
    | "/login"
    | "/signup"
    | "/feedback/$feedbackId"
    | "/forgot-password/sent"
    | "/reset-password/$token"
    | "/feedback/$feedbackId/edit";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | ""
    | "/account"
    | "/create-feedback"
    | "/roadmap"
    | "/email-verification"
    | "/forgot-password"
    | "/login"
    | "/signup"
    | "/feedback/$feedbackId"
    | "/forgot-password/sent"
    | "/reset-password/$token"
    | "/feedback/$feedbackId/edit";
  id:
    | "__root__"
    | "/"
    | "/_auth"
    | "/account"
    | "/create-feedback"
    | "/roadmap"
    | "/_auth/email-verification"
    | "/_auth/forgot-password"
    | "/_auth/login"
    | "/_auth/signup"
    | "/feedback/$feedbackId"
    | "/_auth/forgot-password_/sent"
    | "/_auth/reset-password/$token"
    | "/feedback_/$feedbackId/edit";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthRouteRoute: typeof AuthRouteRouteWithChildren;
  AccountRoute: typeof AccountRoute;
  CreateFeedbackRoute: typeof CreateFeedbackRoute;
  RoadmapRoute: typeof RoadmapRoute;
  FeedbackFeedbackIdRoute: typeof FeedbackFeedbackIdRoute;
  FeedbackFeedbackIdEditRoute: typeof FeedbackFeedbackIdEditRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AccountRoute: AccountRoute,
  CreateFeedbackRoute: CreateFeedbackRoute,
  RoadmapRoute: RoadmapRoute,
  FeedbackFeedbackIdRoute: FeedbackFeedbackIdRoute,
  FeedbackFeedbackIdEditRoute: FeedbackFeedbackIdEditRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/account",
        "/create-feedback",
        "/roadmap",
        "/feedback/$feedbackId",
        "/feedback_/$feedbackId/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/email-verification",
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/signup",
        "/_auth/forgot-password_/sent",
        "/_auth/reset-password/$token"
      ]
    },
    "/account": {
      "filePath": "account.tsx"
    },
    "/create-feedback": {
      "filePath": "create-feedback.tsx"
    },
    "/roadmap": {
      "filePath": "roadmap.tsx"
    },
    "/_auth/email-verification": {
      "filePath": "_auth/email-verification.tsx",
      "parent": "/_auth"
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/feedback/$feedbackId": {
      "filePath": "feedback.$feedbackId.tsx"
    },
    "/_auth/forgot-password_/sent": {
      "filePath": "_auth/forgot-password_.sent.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password/$token": {
      "filePath": "_auth/reset-password.$token.tsx",
      "parent": "/_auth"
    },
    "/feedback_/$feedbackId/edit": {
      "filePath": "feedback_.$feedbackId.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
